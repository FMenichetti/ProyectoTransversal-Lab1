package Vistas;

import AccesoDatos.InscripcionData;
import AccesoDatos.MateriaData;
import Entidades.Alumno;
import Entidades.Materia;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.table.DefaultTableModel;

public class AlumnosMateria extends javax.swing.JInternalFrame {

    public AlumnosMateria() {
        initComponents();
    }

    public void listarMateriasEnComboBox() {
    MateriaData md = new MateriaData();
    List<Materia> materias = md.listarMateria();

    // Ordenar la lista de materias por nombre
    Collections.sort(materias, new Comparator<Materia>() {
        @Override
        public int compare(Materia m1, Materia m2) {
            return m1.getNombre().compareTo(m2.getNombre());
        }
    });

    // Limpiar el combo box antes de agregar las materias
    jComboAlumnoMateria.removeAllItems();

    // Agregar cada materia al combo box
    for (Materia materia : materias) {
        jComboAlumnoMateria.addItem(materia.getNombre());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel13 = new javax.swing.JLabel();
        jComboAlumnoMateria = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaAlumnoMateria = new javax.swing.JTable();
        btnSalirAlumnoMateria = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel13.setText("Seleccione una Materia:");

        jComboAlumnoMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboAlumnoMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboAlumnoMateriaActionPerformed(evt);
            }
        });

        jTablaAlumnoMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "DNI", "Apellido", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTablaAlumnoMateria);

        btnSalirAlumnoMateria.setText("Salir");
        btnSalirAlumnoMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirAlumnoMateriaActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel18.setText("Listado de Alumnos por Materia");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel18)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSalirAlumnoMateria)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboAlumnoMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboAlumnoMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnSalirAlumnoMateria)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirAlumnoMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirAlumnoMateriaActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirAlumnoMateriaActionPerformed

    private void jComboAlumnoMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboAlumnoMateriaActionPerformed
        // Obtenemos el nombre de la materia seleccionada en el combo box
    String nombreMateria = (String) jComboAlumnoMateria.getSelectedItem();

    //Creamos una instancia de MateriaData
    MateriaData materiaData = new MateriaData();

    //Guardamos el id de la materia en una variable
    int idMatSelec = -1; // inicializamos en -1

    //Recorremos y buscamos la materia seleccionada en la lista
    for (Materia materia : materiaData.listarMateria()) {
        if (materia.getNombre().equals(nombreMateria)) {
            //Si se encontro la materia seleccionada, obtenemos su id
            idMatSelec = materia.getIdMateria();
            break; //salimos del bucle cuando se encuentra la materia
        }
    }

    //Verificamos si se encontro la materia seleccionada
    if (idMatSelec != -1) {
        //Creamos una instancia de InscripcionData
        InscripcionData iData = new InscripcionData();

        // Obtenemos la lista de alumnos inscritos en la materia seleccionada
        List<Alumno> alumnos = iData.obtenerAlumnosXMaterias(idMatSelec);

        // Ordenar la lista de alumnos por apellido y nombre
        Collections.sort(alumnos, new Comparator<Alumno>() {
            @Override
            public int compare(Alumno a1, Alumno a2) {
                String nombreCompleto1 = a1.getApellido() + ", " + a1.getNombre();
                String nombreCompleto2 = a2.getApellido() + ", " + a2.getNombre();
                return nombreCompleto1.compareTo(nombreCompleto2);
            }
        });

        //Obtenemos el modelo de la tabla
        DefaultTableModel modeloTabla = (DefaultTableModel) jTablaAlumnoMateria.getModel();

        //Limpiamos el contenido de la tabla
        modeloTabla.setRowCount(0);

        //Ahora vamos a recorrer la lista de alumnos y lo agregaremosa la tabla
        for (Alumno alumno : alumnos) {
            //Creams un array con los datos del alumno
            Object[] rowData = {alumno.getIdAlumno(), alumno.getDni(), alumno.getApellido(), alumno.getNombre()};

            //Agregamos la fila a la tabla
            modeloTabla.addRow(rowData);
        }
    }


    }//GEN-LAST:event_jComboAlumnoMateriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalirAlumnoMateria;
    private javax.swing.JComboBox<String> jComboAlumnoMateria;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaAlumnoMateria;
    // End of variables declaration//GEN-END:variables
}
